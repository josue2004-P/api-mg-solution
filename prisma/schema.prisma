generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                  Int              @id @default(autoincrement())
  username            String           @unique @db.VarChar(50)
  email               String           @unique @db.VarChar(100)
  password            String           @db.VarChar(255)
  first_name          String?          @db.VarChar(50)
  last_name           String?          @db.VarChar(50)
  is_active           Boolean          @default(true)
  last_login          DateTime?
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @updatedAt @db.Timestamp(6)

  user_profiles       user_profile[]
  products product[]
}

model profiles {
  id                 Int              @id @default(autoincrement())
  name               String           @unique @db.VarChar(50)
  description        String?
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)

  user_profiles      user_profile[]
  profile_permissions profile_permissions[]
}

model user_profile {
  user_id    Int
  profile_id Int

  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  profiles   profiles @relation(fields: [profile_id], references: [id], onDelete: Cascade)

  @@id([user_id, profile_id])
}

model permissions {
  id                 Int              @id @default(autoincrement())
  name               String           @unique @db.VarChar(50)
  description        String?
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)

  profile_permissions profile_permissions[]
}

model profile_permissions {
  id           Int      @id @default(autoincrement())
  profile_id   Int
  permission_id Int
  view         Boolean  @default(false)
  create       Boolean  @default(false)
  edit         Boolean  @default(false)
  delete       Boolean  @default(false)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @updatedAt @db.Timestamp(6)

  profiles     profiles    @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  permissions  permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade)
}

model product_category {
  id                 Int              @id @default(autoincrement())
  name               String           @unique @db.VarChar(50)
  description        String?
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)
  products product[]
}

model product_brand {
  id                 Int              @id @default(autoincrement())
  name               String           @unique @db.VarChar(50)
  description        String?
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)
  products product[]
}

model product {
  id                 Int              @id @default(autoincrement())
  name               String           @unique @db.VarChar(50)
  description        String?           @db.VarChar(100)
  price              Float
  stock              Int
  categoryId         Int 
  brandId            Int 
  userCreateId       Int 
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)

  category product_category @relation(fields: [categoryId], references: [id])
  brand    product_brand    @relation(fields: [brandId], references: [id])
  user     users            @relation(fields: [userCreateId], references: [id])
}

model testimony {
  id                 Int              @id @default(autoincrement())
  title              String           @db.VarChar(50)
  description        String?          @db.VarChar(100)
  nameCustomer       String
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)
}

model whatsApp_configuration {
  id                 Int              @id @default(autoincrement())
  initial_message    String           @db.VarChar(100)
  phone              Int  
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)
}

model galery_configuration {
  id                 Int              @id @default(autoincrement())
  title              String           @db.VarChar(50)
  file               String?          @db.VarChar(50)
  path               String           @db.VarChar(100)
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)
}

model customer {
  id                 Int              @id @default(autoincrement())
  first_name         String           @db.VarChar(50)
  last_name          String?          @db.VarChar(50)
  email              String           @db.VarChar(100)
  phone              Int              
  message            String           @db.VarChar(100)
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @updatedAt @db.Timestamp(6)
}
